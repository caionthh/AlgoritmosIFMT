#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>

int main(int argc, char *argv[]) {
setlocale(LC_ALL, "Portuguese");
	
	int opcao_menu1, opcao_menu2;
	int dia_i, mes_i, contador, dia_atual, servicos;  //Contadores
	int historico_dia;
	float maior_valor, menor_valor;
	struct empresa
	{
		int num_servico;
		float valor_servico;
		int cod_servico;
		int cod_cliente;
		char nome[30];
	};
	
	struct servicos_empresa
	{
		int codigo;
		char descricao[30];
	};
	
	struct servicos_empresa servico[4];
	struct empresa atendimento[30][3];
	
	
	while(opcao_menu1 != 6)
	{
	printf("==============\n");
	printf("==== MENU ====\n");
	printf("==============\n\n");
	printf("1 - Cadastrar os tipos de serviços\n");
	printf("2 - Cadastrar os serviços prestados \n");
	printf("3 - Mostrar os serviços prestados em um determinado dia\n");
	printf("4 - Mostrar os serviços prestados dentro de um intervalo de valor\n");
	printf("5 - Mostrar um relatório geral, que exibe, inclusive, a descrição do serviço\n");
	printf("6 - Finalizar\n\n");
	printf("=> ");
	scanf("%d", &opcao_menu1);
	system("cls");	
	
		switch(opcao_menu1) 
		{
			case 1: 
				
				printf("==========================\n");
				printf("== CADASTRO DE SERVIÇOS ==\n");
				printf("==========================\n\n");
				
				for (contador = 0; contador < 4; contador++)	//Cadastro dos 4 Serviços
				{
					printf("Código: ");
					scanf("%d", &servico[contador].codigo);
					printf("\nDescrição: ");
					scanf("%s", &servico[contador].descricao);
					printf("\n\n");			
				}				
				break;
				
			case 2:
				
				printf("Dia Atual ( numérico ):");
				scanf("%d", &dia_atual);	//Dia de hoje
				system("cls");
				
				printf("========================\n");
				printf("== SERVIÇOS PRESTADOS ==\n");
				printf("========================\n\n");
				
				printf("| Dia: %d |\n\n", dia_atual);
				
				for(servicos = 0 ; servicos < 3; servicos ++)	// Entrada de serviços diário
				{
					printf("===================\n");
					printf("%dº serviço\n\n", servicos+1);
					printf("Número do serviço:");
					scanf("%d", &atendimento[dia_atual][servicos].num_servico);
					printf("\nValor do serviço:");
					scanf("%f", &atendimento[dia_atual][servicos].valor_servico);
					printf("\nCódigo do cliente:");
					scanf("%d", &atendimento[dia_atual][servicos].cod_cliente);
					printf("\nCódigo do serviço:");
					scanf("%d", &atendimento[dia_atual][servicos].cod_servico);
					printf("===================\n\n");	
					
					for(contador = 0; contador < 4 ; contador++)	//Verifica existência do código
						{
							if(atendimento[dia_atual][servicos].cod_servico = servico[contador].codigo)
							{
								atendimento[dia_atual][servicos].nome == servico[contador].descricao;
							}
							else
							{
								printf("Código de serviço não Cadastrado\n\n");
							}
						}
						printf("%s\n", atendimento[dia_atual][servicos].nome);
				}
				break;
				
			case 3:
				printf("== HISTÓRICO DIÁRIO ==\n\n");
				printf("DIA:");
				scanf("%d", &historico_dia);
				system("cls");
				
				printf("== SERVIÇOS DO DIA ==\n\n");	//Título
				
				for (dia_atual = 0; dia_atual < 3; dia_atual ++)	//Varredura para achar o nº digitado
				{								
					for (servicos = 0; servicos < 3; servicos ++) 
					{
						if(historico_dia = dia_atual)	// Se o nº digitado for igual ao dia
						{						
							for (mes_i = historico_dia; mes_i < historico_dia; mes_i ++) // Contador que começa no dia e termina no mesmo dia
							{
								for (dia_i = 0; dia_i < 3; dia_i ++)	//Os 3 serviços do dia
								{
									printf(" Serviço %d: %d\n", dia_i, atendimento[mes_i][dia_i].cod_servico);	//Saída dos serviços do dia
								}
							}
						
						}
						else
						{
							printf("Nenhum serviço efetuado no dia %d\n", historico_dia+1);
						}
						
					}
				}
				break;
				
			case 4:	//Relatório por Intervalo
			
				printf("=======================\n");
				printf("RELATÓRIO POR INTERVALO\n");
				printf("=======================\n\n");
				
				printf("Valor Mínimo:");
				scanf("%f", &menor_valor);
				printf("\nValor Máximo:");
				scanf("%f", &maior_valor);
				system("cls");
				
				printf("== SERVIÇOS ==\n\n");
				printf("De R$%.2f à R$%.2f\n\n", menor_valor, maior_valor);
				for ( dia_atual = 0; dia_atual < 3; dia_atual ++)
				{
					for ( servicos = 0; servicos < 3; servicos ++)
					{
						if(atendimento[dia_atual][servicos].valor_servico > menor_valor && atendimento[dia_atual][servicos].valor_servico < maior_valor)
						{
							printf("Número do serviço: %d\n", atendimento[dia_atual][servicos].num_servico);
							printf("\nValor do serviço: R$ %.2f\n", atendimento[dia_atual][servicos].valor_servico);
							printf("\nCódigo do serviço: %f\n", atendimento[dia_atual][servicos].cod_servico);
							printf("\nCódigo do cliente: %f\n\n\n", atendimento[dia_atual][servicos].cod_cliente);
						}														
					}
				}
				break;
				
			case 5:	//Relatório Geral
				
				printf("=====================\n");
				printf("== RELATÓRIO GERAL ==\n");
				printf("=====================\n\n");
				for ( dia_atual = 0 ; dia_atual < 30 ; dia_atual++)
				{
					for(servicos = 0 ; servicos < 3 ; servicos ++)
					{
						printf("Número do serviço: %d\n", atendimento[dia_atual][servicos].num_servico);
						printf("\nValor do serviço: R$ %.2f\n", atendimento[dia_atual][servicos].valor_servico);
						printf("\nCódigo do serviço: %f\n", atendimento[dia_atual][servicos].cod_servico);
						printf("\nCódigo do cliente: %f\n\n\n", atendimento[dia_atual][servicos].cod_cliente);
					}
				}
				/*for ( mes_i = 0; mes_i < 3; mes_i ++)
				{
					for ( dia_i = 0; dia_i < 3; dia_i ++)
					{
						printf("== RELATÓRIO GERAL ==\n\n");
						printf("Número do serviço: %d", atendimento[mes_i][dia_i].num_servico);
						printf("\nValor do serviço: R$ %.2f\n", atendimento[mes_i][dia_i].valor_servico);
						printf("\nCódigo do serviço: %f\n", atendimento[mes_i][dia_i].cod_servico);
						printf("\nCódigo do cliente: %f\n\n\n", atendimento[mes_i][dia_i].cod_cliente);
							
					}
				}*/
				break;
			case 6:
				printf("#####  O PROGRAMA SERÁ ENCERRADO  #####\n\n\n\n");
				system("pause");
				break;
				
			default:
				printf("==============\n");	
				printf("OPÇÃO INVÁLIDA\n");
				printf("==============\n\n");
				break;
		}
		
	}
	return 0;
}